Index: src/main/java/com/spa/demo/frontend/Cassa/Models/Buyer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.spa.demo.frontend.Cassa.Models;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\nimport java.util.*;\r\n\r\n@Getter\r\n@Setter\r\n\r\npublic class Buyer {\r\n    private String Id;\r\n    private String Name;\r\n    private String City;\r\n    private String Street;\r\n    private String PostCode;\r\n    private int Status; //1-adult 2-student 3-pensioner\r\n    private int NumberOfGeneratedId = 0;\r\n    public ObservableList<String> Ids = FXCollections.observableArrayList();\r\n\r\n    //Konstruktor a NumberOfGeneratedId és IDs lista nélkül.\r\n    //NumberOfGeneratedId inicializáláskor mindig 0, az IDs meg majd a GenerateId metodus fogja feltölteni\r\n    public Buyer(String id, String name, String city, String street, String postCode, int status) {\r\n        Id = id;\r\n        Name = name;\r\n        City = city;\r\n        Street = street;\r\n        PostCode = postCode;\r\n        Status = status;\r\n    }\r\n\r\n    //első paramétere a lista mérete, második paraméter egy kapcsoló\r\n    //ha a kapcsoló All akkor a listába lévő összes azonosítót újragenerálja\r\n    //ha a kapcsolóFirstOnly akkor csak az első a buyer saját id-ját generálja újra\r\n    //A buyer példányhoz tartozó Ids listát generálja újra a megváltozott adatokhoz\r\n    public void UpdateList(int size, String option)\r\n    {\r\n        List<String> helperList = new ArrayList<>();\r\n        if(option.equals(\"All\"))\r\n        {\r\n            helperList.addAll(Ids);\r\n            Ids.clear();\r\n            for (String s : helperList) {\r\n                String status = s.substring(0, 2);\r\n                //Ha a régi azonosító első 2 karakter FE akkor újrageneráláskor a felnőtthöz tartozó 1-es paraméterrel generál új id-t\r\n                //Ha NY akkor 3-as akkor nyugdíjas és ezzel generál új id-t, ha DI akkor 2 és diák\r\n                switch (status) {\r\n                    case \"FE\" -> {\r\n                        GenerateId(1);\r\n                    }\r\n                    case \"NY\" -> {\r\n                        GenerateId(3);\r\n                    }\r\n                    case \"DI\" -> {\r\n                        GenerateId(2);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        else if(option.equals(\"FirstOnly\"))\r\n        {\r\n            for (int i = 1; i < Ids.size(); i++)\r\n            {\r\n                helperList.add(Ids.get(i));\r\n            }\r\n            Ids.clear();\r\n            GenerateId(this.Status);\r\n            Ids.addAll(helperList);\r\n        }\r\n    }\r\n\r\n    //kitörli a paraméterül kapott id-t az IDS listből\r\n    public void RemoveId(String id)\r\n    {\r\n        this.Ids.remove(id);\r\n    }\r\n\r\n    //Paraméter egy szám, ha 1 akkor adult, ha 2 akkor student, ha 3-pensioner tipusú azonosítót generál\r\n    //Az azonosító első 2 karaktere az azonosító tipusát határozza meg\r\n    //következő 2 karakter a hónap, utána lévő 2 a napot. Majd az egyediség miatt a személyigazolványszáma a vevőnek\r\n    //következő 2 az óra ,majd perc, utolsó karakter a buyer-hez tartozó jegyeket azonosítja, az első jegy A utána B, C és így tovább\r\n    //az utolsó karakterrel van biztosítva hogy az azonosító biztos mindig egyedi lesz\r\n    //A legenerált azonosítót hozzáadja az Ids listához\r\n    public void GenerateId(int status)\r\n    {\r\n        Date date = new Date();\r\n        Calendar calendar = new GregorianCalendar();\r\n        String month = (calendar.get(Calendar.MONTH)+1) + \"\";\r\n        month = (month.length() == 1) ? \"0\".concat(month) : month;\r\n        String day = calendar.get(Calendar.DAY_OF_MONTH) + \"\";\r\n        day = (day.length() == 1) ? \"0\".concat(day) : day;\r\n        String hour = calendar.get(Calendar.HOUR_OF_DAY) + \"\";\r\n        hour = (hour.length() == 1) ? \"0\".concat(hour) : hour;\r\n        String min = calendar.get(Calendar.MINUTE) + \"\";\r\n        min = (min.length() == 1) ? \"0\".concat(min) : min;\r\n        String sec = calendar.get(Calendar.SECOND) + \"\";\r\n        String lastChar = (char)(this.NumberOfGeneratedId + 'A')+ \"\";\r\n        String statusChar = \"\";\r\n        if (status == 1)\r\n        {\r\n            statusChar = \"FE\";\r\n        }\r\n        else if (status == 2)\r\n        {\r\n            statusChar = \"DI\";\r\n        }\r\n        else if (status == 3)\r\n        {\r\n            statusChar = \"NY\";\r\n        }\r\n        String id = \"\";\r\n        id = statusChar + month + day + this.Id + hour + min  + lastChar;\r\n        NumberOfGeneratedId++;\r\n        Ids.add(id);\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/src/main/java/com/spa/demo/frontend/Cassa/Models/Buyer.java b/src/main/java/com/spa/demo/frontend/Cassa/Models/Buyer.java
--- a/src/main/java/com/spa/demo/frontend/Cassa/Models/Buyer.java	(revision 607a20308bb53b2e8465f4f4311e109d56ff4b8a)
+++ b/src/main/java/com/spa/demo/frontend/Cassa/Models/Buyer.java	(date 1732388899483)
@@ -2,7 +2,6 @@
 
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
-import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.Setter;
 
